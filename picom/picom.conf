fading = true;
fade-in-step = 0.15;
fade-out-step = 0.15;

frame-opacity = 0.9;

blur:
{
  method = "dual_kawase";  # alternatives: "kernel", "gaussian"
  strength = 5;           # higher = more blur
  background = true;      # set true to blur transparent backgrounds
  background-frame = true;
  background-fixed = true;
  blur-background-exclude = ["class_g = 'peek'", "!class_g = 'rofi'"]
};

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `egl`.
#
# Default: "xrender"
backend = "glx"

# Use higher precision during rendering, and apply dither when presenting the
# rendered screen. Reduces banding artifacts, but may cause performance
# degradation. Only works with OpenGL.
dithered-present = true;

# Enable/disable VSync.
#
# Default: false
vsync = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
# Has nothing to do with `corner-radius`.
#
# Default: false
detect-rounded-corners = true;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
#
# Default: false
detect-client-opacity = true;

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case insensitive.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# Default: "warn"
log-level = "info";

# rules: ({
#   match = "class_g = 'Rofi'";
#   opacity = 0.75;
# })
